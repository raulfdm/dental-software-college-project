/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projetolab3gui.src;

import java.awt.Dimension;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import static br.com.projetolab3gui.src.TelaHome.pnlDeskTop;

/**
 *
 * @author Raul
 */
public class TelaConsultaPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form PacientesCadastrados
     */
    public TelaConsultaPaciente() {
        initComponents();
        configurarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabPesquisa = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        lblNomePaciente = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        btnAbrir = new javax.swing.JButton();

        tabPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabPesquisa);

        btnSalvar.setText("Pesquisar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblNomePaciente.setText("Paciente");

        txtNomePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomePacienteKeyReleased(evt);
            }
        });

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomePaciente)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAbrir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtNomePaciente)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSalvar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNomePaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnAbrir))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        preencherTabela();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtNomePacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomePacienteKeyReleased
        pesquisarPaciente();
    }//GEN-LAST:event_txtNomePacienteKeyReleased

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed

        // JOptionPane.showMessageDialog(null, TelaCadastro.listaCadastro.get(0).nomeCompleto);
        try {
            this.setClosed(true);
            TelaCadastro ci = new TelaCadastro();
            pnlDeskTop.add(ci);
            try {
                carregaDados(ci);
            } catch (Exception e) {
            }

            ci.setVisible(true);
            ci.setPosicao();

        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnAbrirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNomePaciente;
    private javax.swing.JTable tabPesquisa;
    private javax.swing.JTextField txtNomePaciente;
    // End of variables declaration//GEN-END:variables

    private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Nome Paciente");
        m.addColumn("CPF");

        tabPesquisa.setModel(m);
        tabPesquisa.getColumnModel().getColumn(0).setMaxWidth(40);
        tabPesquisa.getColumnModel().getColumn(1).setMaxWidth(300);
        tabPesquisa.getColumnModel().getColumn(2).setMaxWidth(100);
        //Centralizar nome da coluna
        ((DefaultTableCellRenderer) tabPesquisa.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

    }

    private void preencherTabela() {
        if (TelaCadastro.listaCadastro.size() > 0) {
            configurarTabela();
            DefaultTableModel m = (DefaultTableModel) tabPesquisa.getModel();
            for (ClasseCadastro c : TelaCadastro.listaCadastro) {
                m.addRow(new Object[]{
                    c.getId(),
                    c.getNomeCompleto(),
                    c.getCpf()
                });
            }
            tabPesquisa.setModel(m);
        }
    }

    private void pesquisarPaciente() {
        String chave = txtNomePaciente.getText().toLowerCase();
        if (!chave.isEmpty()) {
            configurarTabela();
            DefaultTableModel m = (DefaultTableModel) tabPesquisa.getModel();
            for (ClasseCadastro c : TelaCadastro.listaCadastro) {
                if (c.getNomeCompleto().toLowerCase().contains(chave)) {
                    m.addRow(new Object[]{
                        c.getId(),
                        c.getNomeCompleto(),
                        c.getCpf()

                    });
                }
            }
            tabPesquisa.setModel(m);
        } else {
            preencherTabela();
        }
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    private void carregaDados(TelaCadastro ci) {
        int linhaSelecionada = tabPesquisa.getSelectedRow();
        int idAbrir = (int) (tabPesquisa.getValueAt(linhaSelecionada, 0)) - 1;

        //Lista Cadastro
        ci.txtIdCadastro.setText(String.valueOf(TelaCadastro.listaCadastro.get(tabPesquisa.getSelectedRow()).id));
        ci.txtNomeCompleto.setText(TelaCadastro.listaCadastro.get(tabPesquisa.getSelectedRow()).paciente.nomeCompleto);
        ci.txtCpf.setText(TelaCadastro.listaCadastro.get(tabPesquisa.getSelectedRow()).cpf);

        //Lista Paciente
        ci.txtIdCadastro.setText(String.valueOf(TelaCadastro.listaPaciente.get(idAbrir).getIdPaciente()));

        ci.txtNomeCompleto.setText(TelaCadastro.listaPaciente.get(idAbrir).getNomeCompleto());
        ci.txtDataCadastro.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).dataCadastro);
        ci.cboDiaNasc.setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).diaNasc);
        ci.cboMesNasc.setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).mesNasc);
        ci.cboAnoNasc.setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).anoNasc);
        ci.txtIdade.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).idade);
        ci.txtNomePai.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).nomePai);
        ci.txtNomeMae.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).nomeMae);
        ci.cboSexo.getModel().setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).sexo);
        ci.cboEstadoCivil.getModel().setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).estadoCivil);
        ci.txtRg.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).rg);
        ci.txtProfissao.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).profissao);
        ci.txtEmpresa.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).empresa);
        ci.txtEndereco.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).endereco);
        ci.txtNumero.setText(String.valueOf(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).numeroCasa));
        ci.txtCep.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).cep);
        ci.txtComplemento.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).complemento);
        ci.txtBairro.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).bairro);
        ci.txtCidade.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).cidade);
        ci.cboEstado.getModel().setSelectedItem(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).estado);
        ci.txtTelCelular.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).telCelular);
        ci.txtTelResidencial.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).telResidencial);
        ci.txtTelRecado.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).telRecado);
        ci.txtComentario.setText(TelaCadastro.listaPaciente.get(tabPesquisa.getSelectedRow()).comentario);

        //Lista Anamnese
        carregaAnamnese(ci, idAbrir);

    }

    private void carregaAnamnese(TelaCadastro ci, int idAbrir) {
        ci.txtIdAnamnese.setText(String.valueOf(TelaCadastro.listaAnamnese.get(tabPesquisa.getSelectedRow()).idAnamnese));
        ci.txtNomePacienteAnamnese.setText(TelaCadastro.listaCadastro.get(tabPesquisa.getSelectedRow()).nomeCompleto);

        String queixa = TelaCadastro.listaAnamnese.get(idAbrir).getQueixaPrincipal();

        int d1Reumatica = TelaCadastro.listaAnamnese.get(idAbrir).getD1Reumatica();
        int d2Renal = TelaCadastro.listaAnamnese.get(idAbrir).getD2Renal();
        int d3Cardiaco = TelaCadastro.listaAnamnese.get(idAbrir).getD3Cardiaco();
        int d4Hipertensao = TelaCadastro.listaAnamnese.get(idAbrir).getD4Hipertensao();
        int d5Respiratorio = TelaCadastro.listaAnamnese.get(idAbrir).getD5Respiratorio();
        int d6Reumatismo = TelaCadastro.listaAnamnese.get(idAbrir).getD6Reumatismo();
        int d7Gastrico = TelaCadastro.listaAnamnese.get(idAbrir).getD7Gastrico();
        int d8Diabete = TelaCadastro.listaAnamnese.get(idAbrir).getD8Diabete();
        int d9Alergico = TelaCadastro.listaAnamnese.get(idAbrir).getD9Alergico();
        String habito = TelaCadastro.listaAnamnese.get(idAbrir).getHabito();

        int p1SofreDoenca = TelaCadastro.listaAnamnese.get(idAbrir).getP1SofreDoenca();
        String p1SofreDoencaTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP1SofreDoencaTxt();
        int p2TratamentoAtualmente = TelaCadastro.listaAnamnese.get(idAbrir).getP2TratamentoAtualmente();
        String p2TratamentoAtualmenteTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP2TratamentoAtualmenteTxt();
        int p3UsaMedicacao = TelaCadastro.listaAnamnese.get(idAbrir).getP3UsaMedicacao();
        String p3UsaMedicacaoTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP3UsaMedicacaoTxt();
        String p4NomeMedicoTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP4NomeMedicoTxt();
        int p5Gravidez = TelaCadastro.listaAnamnese.get(idAbrir).getP5Gravidez();
        int p6Alergia = TelaCadastro.listaAnamnese.get(idAbrir).getP6Alergia();
        String p6AlergiaTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP6AlergiaTxt();
        int p7Operado = TelaCadastro.listaAnamnese.get(idAbrir).getP7Operado();
        String p7OperadoTxt = TelaCadastro.listaAnamnese.get(idAbrir).getP7OperadoTxt();
        int p8Cicatrizacao = TelaCadastro.listaAnamnese.get(idAbrir).getP8Cicatrizacao();
        int p9Anestesia = TelaCadastro.listaAnamnese.get(idAbrir).getP9Anestesia();
        int p10Hemorragia = TelaCadastro.listaAnamnese.get(idAbrir).getP10Hemorragia();

        String antecedentesFamiliares = TelaCadastro.listaAnamnese.get(idAbrir).getAntecedentesFamiliares();
        String outrasObs = TelaCadastro.listaAnamnese.get(idAbrir).getOutrasObs();

        //----------------------- RADIO BUTTON - DOENÇA ----------------------//
        if (d1Reumatica == 0) {
            ci.rbtnNaoDoenca1.setSelected(true);
        } else {
            ci.rbtnSimDoenca1.setSelected(true);
        }

        if (d2Renal == 0) {
            ci.rbtnNaoDoenca2.setSelected(true);
        } else {
            ci.rbtnSimDoenca3.setSelected(true);
        }

        if (d3Cardiaco == 0) {
            ci.rbtnNaoDoenca3.setSelected(true);
        } else {
            ci.rbtnSimDoenca3.setSelected(true);
        }

        if (d4Hipertensao == 0) {
            ci.rbtnNaoDoenca4.setSelected(true);
        } else {
            ci.rbtnSimDoenca4.setSelected(true);
        }

        if (d5Respiratorio == 0) {
            ci.rbtnNaoDoenca5.setSelected(true);
        } else {
            ci.rbtnSimDoenca5.setSelected(true);
        }

        if (d6Reumatismo == 0) {
            ci.rbtnNaoDoenca6.setSelected(true);
        } else {
            ci.rbtnSimDoenca6.setSelected(true);
        }

        if (d7Gastrico == 0) {
            ci.rbtnNaoDoenca7.setSelected(true);
        } else {
            ci.rbtnSimDoenca7.setSelected(true);
        }

        if (d8Diabete == 0) {
            ci.rbtnNaoDoenca8.setSelected(true);
        } else {
            ci.rbtnSimDoenca8.setSelected(true);
        }

        if (d9Alergico == 0) {
            ci.rbtnNaoDoenca9.setSelected(true);
        } else {
            ci.rbtnSimDoenca9.setSelected(true);
        }

        //---------------------- RADIO BUTTON - PERGUNTA ---------------------//
        if (p1SofreDoenca == 0) {
            ci.rbtnNaoPergunta1.setSelected(true);
        } else {
            ci.rbtnSimPergunta1.setSelected(true);
        }
        if (p2TratamentoAtualmente == 0) {
            ci.rbtnNaoPergunta2.setSelected(true);
        } else {
            ci.rbtnSimPergunta2.setSelected(true);
        }
        if (p3UsaMedicacao == 0) {
            ci.rbtnNaoPergunta3.setSelected(true);
        } else {
            ci.rbtnSimPergunta3.setSelected(true);
        }
        if (p5Gravidez == 0) {
            ci.rbtnNaoPergunta5.setSelected(true);
        } else {
            ci.rbtnSimPergunta5.setSelected(true);
        }
        if (p6Alergia == 0) {
            ci.rbtnNaoPergunta6.setSelected(true);
        } else {
            ci.rbtnSimPergunta6.setSelected(true);
        }
        if (p7Operado == 0) {
            ci.rbtnNaoPergunta7.setSelected(true);
        } else {
            ci.rbtnSimPergunta7.setSelected(true);
        }
        if (p8Cicatrizacao == 0) {
            ci.rbtnNaoPergunta8.setSelected(true);
        } else {
            ci.rbtnSimPergunta8.setSelected(true);
        }
        if (p9Anestesia == 0) {
            ci.rbtnNaoPergunta9.setSelected(true);
        } else {
            ci.rbtnSimPergunta9.setSelected(true);
        }
        if (p10Hemorragia == 0) {
            ci.rbtnNaoPergunta10.setSelected(true);
        } else {
            ci.rbtnSimPergunta10.setSelected(true);
        }

        //----------------------------- TXTs ---------------------------------//
        ci.txtQueixa.setText(queixa);
        ci.txtHabitos.setText(habito);
        ci.txtPergunta1.setText(p1SofreDoencaTxt);
        ci.txtPergunta2.setText(p2TratamentoAtualmenteTxt);
        ci.txtPergunta3.setText(p3UsaMedicacaoTxt);
        ci.txtPergunta4.setText(p4NomeMedicoTxt);
        ci.txtPergunta6.setText(p6AlergiaTxt);
        ci.txtPergunta7.setText(p7OperadoTxt);
        ci.txtAntecedentes.setText(antecedentesFamiliares);
        ci.txtOutrasObs.setText(outrasObs);
    }
}
